{
    "kind": "ModuleDeclaration",
    "identifier": "selectStatement",
    "locals": [
        {
            "kind": "AliasDirective",
            "identifier": "monkey",
            "target": {
                "kind": "ModuleDeclaration",
                "identifier": "monkey"
            },
            "type": "Module"
        },
        {
            "kind": "FunctionGroupDeclaration",
            "identifier": "Print",
            "type": "Print",
            "overloads": [
                {
                    "kind": "FunctionDeclaration",
                    "identifier": "Print",
                    "locals": [
                        "message"
                    ],
                    "type": "Print: Int(String)",
                    "returnType": "Int",
                    "parameters": [
                        {
                            "kind": "DataDeclaration",
                            "declarationKind": "Parameter",
                            "identifier": "message",
                            "typeAnnotation": "String",
                            "type": "String"
                        }
                    ],
                    "statements": []
                }
            ]
        },
        {
            "kind": "FunctionGroupDeclaration",
            "identifier": "Main",
            "type": "Main",
            "overloads": [
                {
                    "kind": "FunctionDeclaration",
                    "identifier": "Main",
                    "locals": [
                        "val"
                    ],
                    "type": "Main: Int()",
                    "returnType": "Int",
                    "parameters": [],
                    "statements": [
                        {
                            "kind": "DataDeclarationStatement",
                            "dataDeclaration": {
                                "kind": "DataDeclaration",
                                "declarationKind": "Local",
                                "identifier": "val",
                                "operator": "ColonEqualsSign",
                                "expression": {
                                    "kind": "IntegerLiteralExpression",
                                    "type": "Int",
                                    "value": "24"
                                },
                                "type": "Int"
                            }
                        },
                        {
                            "kind": "SelectStatement",
                            "caseClauses": [
                                {
                                    "kind": "CaseClause",
                                    "locals": [],
                                    "expressions": [
                                        {
                                            "kind": "IntegerLiteralExpression",
                                            "type": "Int",
                                            "value": "1"
                                        }
                                    ],
                                    "statements": [
                                        {
                                            "kind": "ExpressionStatement",
                                            "expression": {
                                                "kind": "InvokeExpression",
                                                "type": "Int",
                                                "overload": "Print: Int(String)",
                                                "invocableExpression": {
                                                    "kind": "IdentifierExpression",
                                                    "type": "Print",
                                                    "identifier": "Print"
                                                },
                                                "arguments": [
                                                    {
                                                        "kind": "StringLiteralExpression",
                                                        "type": "String",
                                                        "value": "1"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                },
                                {
                                    "kind": "CaseClause",
                                    "locals": [],
                                    "expressions": [
                                        {
                                            "kind": "IntegerLiteralExpression",
                                            "type": "Int",
                                            "value": "2"
                                        },
                                        {
                                            "kind": "IntegerLiteralExpression",
                                            "type": "Int",
                                            "value": "3"
                                        }
                                    ],
                                    "statements": [
                                        {
                                            "kind": "ExpressionStatement",
                                            "expression": {
                                                "kind": "InvokeExpression",
                                                "type": "Int",
                                                "overload": "Print: Int(String)",
                                                "invocableExpression": {
                                                    "kind": "IdentifierExpression",
                                                    "type": "Print",
                                                    "identifier": "Print"
                                                },
                                                "arguments": [
                                                    {
                                                        "kind": "IdentifierExpression",
                                                        "type": "Int",
                                                        "identifier": "val"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            ],
                            "defaultClause": {
                                "kind": "DefaultClause",
                                "locals": [],
                                "statements": [
                                    {
                                        "kind": "ExpressionStatement",
                                        "expression": {
                                            "kind": "InvokeExpression",
                                            "type": "Int",
                                            "overload": "Print: Int(String)",
                                            "invocableExpression": {
                                                "kind": "IdentifierExpression",
                                                "type": "Print",
                                                "identifier": "Print"
                                            },
                                            "arguments": [
                                                {
                                                    "kind": "StringLiteralExpression",
                                                    "type": "String",
                                                    "value": "oh no"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        }
    ]
}